From 8cb073ade284dbe684c1637c22f0c1c7bfc79c7e Mon Sep 17 00:00:00 2001
From: Casper Biering <cbiering@toogoodtogo.com>
Date: Wed, 2 Sep 2020 12:31:17 +0200
Subject: [PATCH 1/2] Allow password to be saved to keychain with skip-prompt

---
 cmd/saml2aws/commands/configure.go | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/cmd/saml2aws/commands/configure.go b/cmd/saml2aws/commands/configure.go
index feddd6f6..999fed3c 100644
--- a/cmd/saml2aws/commands/configure.go
+++ b/cmd/saml2aws/commands/configure.go
@@ -42,11 +42,11 @@ func Configure(configFlags *flags.CommonFlags) error {
 		if err != nil {
 			return errors.Wrap(err, "failed to input configuration")
 		}
+	}
 
-		if credentials.SupportsStorage() {
-			if err := storeCredentials(configFlags, account); err != nil {
-				return err
-			}
+	if credentials.SupportsStorage() {
+		if err := storeCredentials(configFlags, account); err != nil {
+			return err
 		}
 	}
 
@@ -71,7 +71,7 @@ func storeCredentials(configFlags *flags.CommonFlags, account *cfg.IDPAccount) e
 		if err := credentials.SaveCredentials(account.URL, account.Username, configFlags.Password); err != nil {
 			return errors.Wrap(err, "error storing password in keychain")
 		}
-	} else {
+	} else if !configFlags.SkipPrompt {
 		password := prompter.Password("Password")
 		if password != "" {
 			if confirmPassword := prompter.Password("Confirm"); confirmPassword == password {

From 4dc56debda890d1a02a27069e22adc537325aea6 Mon Sep 17 00:00:00 2001
From: Casper Biering <cbiering@toogoodtogo.com>
Date: Mon, 8 Mar 2021 13:53:03 +0100
Subject: [PATCH 2/2] Refactor password prompting

---
 cmd/saml2aws/commands/configure.go | 37 +++++++++++++++---------------
 1 file changed, 19 insertions(+), 18 deletions(-)

diff --git a/cmd/saml2aws/commands/configure.go b/cmd/saml2aws/commands/configure.go
index 999fed3c..62e7928c 100644
--- a/cmd/saml2aws/commands/configure.go
+++ b/cmd/saml2aws/commands/configure.go
@@ -21,6 +21,7 @@ const OneLoginOAuthPath = "/auth/oauth2/v2/token"
 func Configure(configFlags *flags.CommonFlags) error {
 
 	idpAccountName := configFlags.IdpAccount
+	idpAccountPassword := configFlags.Password
 
 	// pass in alternative location of saml2aws config file, if set.
 	cfgm, err := cfg.NewConfigManager(configFlags.ConfigFile)
@@ -42,10 +43,24 @@ func Configure(configFlags *flags.CommonFlags) error {
 		if err != nil {
 			return errors.Wrap(err, "failed to input configuration")
 		}
+
+		if idpAccountPassword == "" {
+			password := prompter.Password("Password")
+			if password != "" {
+				if confirmPassword := prompter.Password("Confirm"); confirmPassword == password {
+					idpAccountPassword = password
+				} else {
+					log.Println("Passwords did not match")
+					os.Exit(1)
+				}
+			} else {
+				log.Println("No password supplied")
+			}
+		}
 	}
 
 	if credentials.SupportsStorage() {
-		if err := storeCredentials(configFlags, account); err != nil {
+		if err := storeCredentials(configFlags, account, idpAccountPassword); err != nil {
 			return err
 		}
 	}
@@ -63,28 +78,14 @@ func Configure(configFlags *flags.CommonFlags) error {
 	return nil
 }
 
-func storeCredentials(configFlags *flags.CommonFlags, account *cfg.IDPAccount) error {
+func storeCredentials(configFlags *flags.CommonFlags, account *cfg.IDPAccount, idpAccountPassword string) error {
 	if configFlags.DisableKeychain {
 		return nil
 	}
-	if configFlags.Password != "" {
-		if err := credentials.SaveCredentials(account.URL, account.Username, configFlags.Password); err != nil {
+	if idpAccountPassword != "" {
+		if err := credentials.SaveCredentials(account.URL, account.Username, idpAccountPassword); err != nil {
 			return errors.Wrap(err, "error storing password in keychain")
 		}
-	} else if !configFlags.SkipPrompt {
-		password := prompter.Password("Password")
-		if password != "" {
-			if confirmPassword := prompter.Password("Confirm"); confirmPassword == password {
-				if err := credentials.SaveCredentials(account.URL, account.Username, password); err != nil {
-					return errors.Wrap(err, "error storing password in keychain")
-				}
-			} else {
-				log.Println("Passwords did not match")
-				os.Exit(1)
-			}
-		} else {
-			log.Println("No password supplied")
-		}
 	}
 	if account.Provider == onelogin.ProviderName {
 		if configFlags.ClientID == "" || configFlags.ClientSecret == "" {
